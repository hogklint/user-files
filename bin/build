#!/bin/bash
set -eo pipefail

trap "echo -e '\a'" EXIT

RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
NC=$(tput sgr0)

DK_APP_UI = 0
DK_COMMON = 0
DK_BASE = 0
DK_MODULES = 0
DK_REST_BASE = 0
DK_CLOUD_COMMAND = 0
DK_ORDER_RUN_MONITOR = 0
DK_RECIPE_RUNNER = 0
DK_REPO_CONFIG_SERVICE = 0
DK_REPO_REST_API = 0
DK_REST_API = 0

error()
{
  echo ""
  echo "${RED}error${NC}: $@" >&2
  exit 1
}

sub_build()
{
  if ! make -C "$1" build restart
  then
    error "$1 failed"
  fi
}

usage()
{
  cat <<OEM

    $(basename $0) [-a] [-c] [-d] [-e] [-m] [-r] [-u]

    -a       REST [A]PI service
    -c       Repo [C]onfig service
    -d       Cloud[d] Command
    -e       R[e]po REST API
    -m       Order Run [M]onitor
    -r       [R]ecipe Runner
    -u       [U]I
OEM
}

while getopts ":acdemru" o; do
    case "${o}" in
        a)
          DK_REST_API = 1
          ;;
        c)
          DK_REPO_CONFIG_SERVICE = 1
          ;;
        d)
          DK_CLOUD_COMMAND = 1
          ;;
        e)
          DK_REPO_REST_API = 1
          ;;
        m)
          DK_ORDER_RUN_MONITOR = 1
          ;;
        r)
          DK_RECIPE_RUNNER = 1
          ;;
        u)
          DK_APP_UI = 1
          ;;
        *)
          usage
          exit 0
          ;;
    esac
done
shift $((OPTIND-1))

pushd "$PLATFORM_HOME"
if [ "$DK_APP_UI" -eq 1 ]
then
  sub_build DKAppUI
fi

if [ "$DK_COMMON" -eq 1 ]
then
  sub_build DKCommon
fi

if [ "$DK_BASE" -eq 1 ]
then
  sub_build DKBase
fi

if [ "$DK_MODULES" -eq 1 ]
then
  sub_build DKModules
fi

if [ "$DK_REST_BASE" -eq 1 ]
then
  sub_build DKRestBase
fi

if [ "$DK_CLOUD_COMMAND" -eq 1 ]
then
  sub_build DKCloudCommand
fi

if [ "$DK_ORDER_RUN_MONITOR" -eq 1 ]
then
  sub_build DKOrderRunMonitor
fi

if [ "$DK_RECIPE_RUNNER" -eq 1 ]
then
  sub_build DKRecipeRunner
fi

if [ "$DK_REPO_CONFIG_SERVICE" -eq 1 ]
then
  sub_build DKRepoConfigService
fi

if [ "$DK_REPO_REST_API" -eq 1 ]
then
  sub_build DKRepoRestAPI
fi

if [ "$DK_REST_API" -eq 1 ]
then
  sub_build DKRestAPI
fi
popd

echo ""
echo "${GREEN}Build completed succesfully${NC}"
echo ""
